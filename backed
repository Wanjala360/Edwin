const express = require('express');
const cors = require('cors');
const app = express();
app.use(cors());
app.use(express.json());

let users = [];
let bookings = [];
let subjects = [
  "English", "Kiswahili", "Mathematics", "Integrated Science", "Social Studies",
  "Religious Education", "Health Education", "Pre-Technical and Pre-Career Education",
  "Computer Studies", "Business Studies", "Sports and Physical Education", 
  "Life Skills Education", "Foreign Languages", "Visual Arts", "Performing Arts", 
  "Agriculture", "Home Science"
];

app.post('/api/register', (req, res) => {
  const { name, email, password, role, selectedSubjects } = req.body;
  if (users.find(u => u.email === email)) {
    return res.status(400).json({ error: 'Email already exists' });
  }
  const newUser = {
    id: users.length + 1,
    name, email, password, role,
    selectedSubjects: role === 'teacher' ? selectedSubjects : [],
    favorites: [],
    availability: [],
  };
  users.push(newUser);
  res.json({ success: true, user: newUser });
});

app.post('/api/login', (req, res) => {
  const { email, password } = req.body;
  const user = users.find(u => u.email === email && u.password === password);
  if (!user) return res.status(401).json({ error: 'Invalid credentials' });
  res.json({ success: true, user });
});

app.get('/api/teachers', (req, res) => {
  const { subject } = req.query;
  const filtered = users.filter(u => u.role === 'teacher' && u.selectedSubjects.includes(subject));
  res.json(filtered);
});

app.post('/api/book', (req, res) => {
  const { learnerId, teacherId, subject, dateTime } = req.body;
  const booking = {
    id: bookings.length + 1,
    learnerId, teacherId, subject, dateTime,
    status: 'pending',
    zoomLink: `https://zoom.us/demo-session/${bookings.length + 1}`
  };
  bookings.push(booking);
  res.json({ success: true, booking });
});

app.get('/api/learner/:id/bookings', (req, res) => {
  const learnerId = parseInt(req.params.id);
  const myBookings = bookings.filter(b => b.learnerId === learnerId);
  res.json(myBookings);
});

app.get('/api/subjects', (req, res) => {
  res.json(subjects);
});

app.listen(5000, () => console.log('Backend running on http://localhost:5000'));
